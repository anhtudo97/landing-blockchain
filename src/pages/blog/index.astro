---
import Card from '../../components/Card';
import CutCornerButton from '../../components/CutCornerButton';
import Hexagon from '../../components/Hexagon';
import Tag from '../../components/Tag';
import Default from '../../layouts/Default.astro';

import { getCollection } from 'astro:content';
import { motion } from 'framer-motion';
import { twMerge } from 'tailwind-merge';
import { getPostColorFromCategory } from '../../utils';

const posts = (await getCollection('blog')).sort(
  (a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf(),
);

const latestPost = posts[0];
---

<Default>
  <section class="py-60 relative overflow-x-clip">
    <div class="absolute left-1/2 top-1/2 -translate-x-1/2 -translate-y-1/2">
      <Hexagon size={800} client:load duration={30} />
    </div>
    <div class="absolute left-1/2 top-1/2 -translate-x-1/2 -translate-y-1/2">
      <Hexagon size={1200} client:load duration={50} reverse />
    </div>
    <div class="container">
      <!-- Hero section -->
      <div class="max-w-3xl mx-auto">
        <p
          class="uppercase font-extrabold text-center text-zinc-500 tracking-wider"
        >
          Latest Post
        </p>
        <h1
          class="font-heading font-black text-5xl md:text-6xl lg:text-7xl text-center mt-4"
        >
          {latestPost.data.title}
        </h1>
        <p class="text-center text-xl md:text-2xl mt-6 text-zinc-400 max-w-xl mx-auto">
          {latestPost.data.description}
        </p>
        <div class="flex justify-center mt-10">
          <a href={`/blog/${latestPost.slug}`}>
            <CutCornerButton>Read More</CutCornerButton>
          </a>
        </div>
      </div>
    </div>
  </section>
  <section class="py-32 bg-zinc-900/30 backdrop-blur-sm">
    <!-- Blog posts -->
    <div class="container">
      <div class="grid grid-cols-1 md:grid-cols-2 gap-8">
        <div class="flex flex-col lg:gap-12 gap-8">
          {
            posts.map(
              ({ data: { category, description, title }, slug }, index) => {
                return (
                  <motion.a
                    client:load
                    href={`/blog/${slug}`}
                    className={twMerge(index % 2 !== 0 && 'block md:hidden')}
                    initial={{
                      opacity: 0,
                      y: 20,
                    }}
                    whileInView={{
                      opacity: 1,
                      y: 0,
                    }}
                    viewport={{
                      once: true,
                      amount: 0.5,
                    }}
                    transition={{
                      duration: 0.5,
                      ease: 'easeIn',
                    }}
                  >
                    <Card
                      color={getPostColorFromCategory(category)}
                      buttonText="Read More"
                    >
                      <Tag color={getPostColorFromCategory(category)}>
                        {category}
                      </Tag>
                      <h2 class="font-heading font-black text-3xl mt-4">
                        {title}
                      </h2>
                      <p class="text-lg mt-6 text-zinc-400">{description}</p>
                    </Card>
                  </motion.a>
                );
              },
            )
          }
        </div>
        <div class="hidden md:flex flex-col lg:gap-12 gap-8 mt-24">
          {
            posts.map(
              ({ data: { category, description, title }, slug }, index) => {
                return (
                  <motion.a
                    client:load
                    href={`/blog/${slug}`}
                    className={twMerge(index % 2 === 0 && 'hidden')}
                    initial={{
                      opacity: 0,
                      y: 20,
                    }}
                    whileInView={{
                      opacity: 1,
                      y: 0,
                    }}
                    viewport={{
                      once: true,
                      amount: 0.5,
                    }}
                    transition={{
                      duration: 0.5,
                      ease: 'easeIn',
                    }}
                  >
                    <Card
                      color={getPostColorFromCategory(category)}
                      buttonText="Read More"
                    >
                      <Tag color={getPostColorFromCategory(category)}>
                        {category}
                      </Tag>
                      <h2 class="font-heading font-black text-3xl mt-4">
                        {title}
                      </h2>
                      <p class="text-lg mt-6 text-zinc-400">{description}</p>
                    </Card>
                  </motion.a>
                );
              },
            )
          }
        </div>
      </div>
    </div>
  </section>
</Default>
